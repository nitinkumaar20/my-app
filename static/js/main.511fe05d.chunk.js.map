{"version":3,"sources":["components/Navbar.js","components/TextFrom.js","components/Alert.js","components/About.js","action/index.js","App.js","reportWebVitals.js","reducers/updown.js","reducers/index.js","store.js","index.js"],"names":["Navbar","props","className","mode","to","sitname","type","id","about","style","height","width","cursor","onClick","pallet","transition","toggle","role","htmlFor","TextFrom","useState","text","setText","color","heading","value","onChange","event","target","rows","disabled","length","backgroundColor","newtext","toUpperCase","showalert","toLocaleLowerCase","document","getElementById","navigator","clipboard","writeText","newText","split","join","filter","a1","alert","typ","word","lower","toLowerCase","charAt","slice","capitalize","msg","defaultProps","About","dispatch","useDispatch","theValue","useSelector","state","changeNum","class","mystyle","App","setmode","setalert","setmystyle","message","setInterval","classremove","body","classList","remove","title","cll","add","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","action","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.511fe05d.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n// import { useSelector } from 'react-redux'\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n  // const theValue = useSelector((state)=>{ return state.changeNum});\r\n \r\n    return (\r\n<>\r\n<nav  className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid \">\r\n    {/* <a className=\"navbar-brand\" href =\"#\">{props.sitname}</a> */}\r\n    <Link className=\"navbar-brand\" to =\"/\">{props.sitname}</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n    \r\n        <li className=\"nav-item\">\r\n          {/* <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a> */}\r\n          <Link className=\"nav-link \" aria-current=\"page\" to =\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          {/* <a className=\"nav-link\"  href=\"#\">{props.about}</a> */}\r\n          <Link className=\"nav-link\"  to=\"/about\">{props.about}</Link>\r\n        </li>\r\n        \r\n       \r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className=\"d-flex .flex-sm-row \">\r\n      <div className=\"bg-danger rounded mx-2 my-2 \"style={{height:'30px', width:'30px', cursor:'pointer'}} onClick={()=>props.pallet('danger')}></div>\r\n      {/* <div className=\" rounded mx-2\"style={{height:'30px', width:'30px', cursor:'pointer',backgroundColor:'#70aeca'}} onClick={()=>props.pallet('#70aeca')}></div> */}\r\n      <div className=\"bg-info rounded mx-2 my-2 .flex-sm-row\"style={{height:'30px', width:'30px', cursor:'pointer'}} onClick={()=>props.pallet('info')}></div>\r\n      <div className=\"bg-warning rounded mx-2 my-2\"style={{height:'30px', width:'30px', cursor:'pointer'}} onClick={()=>props.pallet('warning')}></div>\r\n      <div className=\"bg-success rounded mx-2 my-2\"style={{height:'30px', width:'30px', cursor:'pointer'}} onClick={()=>props.pallet('success')}></div>\r\n      </div>\r\n      <div className=\"form-check form-switch transition\" >\r\n        <input className=\"form-check-input\" style={{transition: '.4s'}} onClick={props.toggle} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className={`form-check-label text-${props.mode==='light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\">{props.mode==='light'?'Enable Dark mode':'Enable Light mode'}</label>\r\n        {/* <label className={`form-check-label text-${props.mode==='light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\">{props.chtext}</label> */}\r\n      </div>\r\n    </div>\r\n  </div>\r\n  {/* <div className=\"container\">\r\n  <input type=\"text\" value = {theValue} className=\"btn btn-info\"/>\r\n  </div> */}\r\n</nav>\r\n\r\n </>\r\n\r\n    )\r\n}\r\n\r\nNavbar.propTypes ={\r\n    sitname: PropTypes.string,\r\n    about: PropTypes.string,\r\n}\r\n\r\nNavbar.defaultProps ={\r\n    sitname: 'enter sitename',\r\n    about: 'enter about',\r\n\r\n}","import React,{useState} from 'react'\r\n\r\nexport default function TextFrom(props) {\r\n    const converttoup=()=>{\r\n    //    console.log(text.toUpperCase());\r\n    // setText(text.bold());\r\n    let newtext= text.toUpperCase();\r\n    setText(newtext)  \r\n    props.showalert(\"converted to uppercase\",\"success\") ; \r\n    }\r\n    const textchnage =(event)=>{\r\n        setText(event.target.value)\r\n\r\n    }\r\n    const converttolow=()=>{\r\n        setText(text.toLocaleLowerCase())\r\n        props.showalert(\"converted to lowercase\",\"success\");\r\n    }\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showalert(\"extra spaces removed\",\"success\");  \r\n    }\r\n    const handleCopy = () => {\r\n        let text = document.getElementById(\"exampleFormControlTextarea1\");\r\n        // text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showalert(\"copy to clipboard\",\"success\");\r\n    }\r\n    const [text, setText]=useState(\"Enter the text\");\r\n    const removeSampletext =()=>{\r\n        setText('');\r\n    }\r\n    return (\r\n    <>\r\n    <div className=\"container\" style={{color: props.mode===\"dark\"?\"white\":\"black\"}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"my-4\">\r\n            <textarea onClick={removeSampletext} className={`form-control text-${props.mode==='light'?'secondary':'light'} bg-${props.mode} `} id=\"exampleFormControlTextarea1\" value={text} onChange={textchnage} rows=\"10\"></textarea>\r\n        </div>\r\n            <button type=\"submit\" disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" style={{backgroundColor: props.mode===\"dark\"?\"grey\":\"\",}} onClick={converttoup}>convert to upparcase</button>\r\n            <button type=\"submit\" disabled={text.length===0}className=\"btn btn-primary mx-1 my-1\"style={{backgroundColor: props.mode===\"dark\"?\"grey\":\"\"}} onClick={converttolow}>convert to lowercase</button>\r\n            <button type=\"submit\"disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\"style={{backgroundColor: props.mode===\"dark\"?\"grey\":\"\"}} onClick={handleCopy}>copy</button>\r\n            <button type=\"submit\" disabled={text.length===0}className=\"btn btn-primary mx-1 my-1\" style={{backgroundColor: props.mode===\"dark\"?\"grey\":\"\"}}onClick={handleExtraSpaces}>Remove extra spaces</button>\r\n\r\n\r\n        <h2>Your text Summary</h2>\r\n        <p>{text.split(/\\s+/).filter((a1)=>{return a1.length!==0}).length} words and {text.length} is character</p>\r\n        <p>\r\n            {0.008 * text.split(\" \").filter((a1)=>{return a1.length!==0}).length} Minutes Need To Read\r\n            </p>\r\n            <h2>Prievew</h2>\r\n        <p> {text.length>0?text:\"enter text above to preview\"}</p>\r\n\r\n    </div>\r\n    </>\r\n )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function alert(props) {\r\n    const capitalize = (word)=>{\r\n       const lower  = word.toLowerCase();\r\n       return lower.charAt(0).toUpperCase() +lower.slice(1);\r\n\r\n    }\r\n    return (\r\n    <div style={{height:\"3.5rem\"}}>\r\n        {\r\n        props.alert && \r\n            <div className={`alert alert-${props.alert.typ} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.typ)}</strong>:{props.alert.msg}\r\n                {/* <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n            </div>}\r\n            </div>  \r\n        \r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport {incrNum,decNum} from '../action/index'\r\n\r\n\r\n\r\n\r\nexport default function About(props) {\r\n  const dispatch = useDispatch();\r\n  const theValue = useSelector((state)=>{ return state.changeNum});\r\n  return (\r\n    <>\r\n    <div className =\"container\" >\r\n      <div class=\"accordion\" id=\"accordionExample\">\r\n        <div class=\"accordion-item \">\r\n          <h2 class=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              class=\"accordion-button \"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n              style={props.mystyle}\r\n              \r\n            >\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            class=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div class=\"accordion-body  \" style={props.mystyle}>\r\n              <strong>This is the first item's accordion body.</strong> It is\r\n              shown by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n              though the transition does limit overflow.\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"accordion-item\">\r\n          <h2 class=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              class=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n              style={props.mystyle}\r\n            >\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            class=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div class=\"accordion-body\"  style={props.mystyle}>\r\n              <strong>This is the second item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              though the transition does limit overflow.\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"accordion-item\">\r\n          <h2 class=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              class=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n              style={props.mystyle}\r\n            >\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            class=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div class=\"accordion-body\"  style={props.mystyle}>\r\n              <strong>This is the third item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS orthough the transition does limit overflow.\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  <div className=\"container\">\r\n  <button type=\"button\" className=\"btn btn-info mx-2\" onClick={()=>{return dispatch(incrNum())}}>Increament</button>\r\n  <input type=\"text\" value = {theValue} className=\"btn btn-info bg-light\"/>\r\n\r\n  <button type=\"button\" className=\"btn btn-info mx-2\" onClick={()=>{ return dispatch(decNum())}}>Decrement</button>\r\n  \r\n    </div>\r\n    </>\r\n  );\r\n\r\n}\r\n\r\n\r\n","export const incrNum = ()=>{\r\n    return{\r\n        type: 'increament'\r\n    }\r\n\r\n}\r\nexport const decNum = ()=>{\r\n    return{\r\n        type: 'decrement'\r\n    }\r\n\r\n}","\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextFrom from \"./components/TextFrom\";\nimport Alert from \"./components/Alert\";\n\n\nimport React,{useState} from 'react'\nimport About from \"./components/About\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n\n\nfunction App() {\n  \n\n  const [mode, setmode] = useState('light');\n  const [alert, setalert] = useState(null);\n  const [mystyle, setmystyle] = useState({color:\"black\",backgroundColor:\"white\", });\n\n const showalert = (message,type)=>{\n setalert({\n   msg: message,\n   typ: type,\n });\n setInterval(() => {\n   setalert(null);\n }, 2500);\n }\n \n  // palleter coading here\n\n  const classremove = ()=>{\n    document.body.classList.remove('bg-danger');\n    document.body.classList.remove('bg-light');\n    document.body.classList.remove('bg-success');\n    document.body.classList.remove('bg-info');\n    document.body.classList.remove('bg-warning');\n  }\n  const pallet =(cll)=>{\n    // there are two wAYS FOR THIs one is to add boostrap classs other is internal css \n    classremove();\n    document.body.classList.add('bg-'+ cll);\n    // document.body.style.backgroundColor=(cll);\n    \n  }\n\n\n\n // dark mode coadind here----------------------------------->>\n  // const [chtext, setchtext] = useState('Enable Dark Mode');\n  const toggle= ()=>{\n    classremove();\n    \n   \n    if(mode==='light'){\n      setmode('dark');\n      document.body.style.backgroundColor= '#1d2122';\n      // setchtext('Enable Light mode')\n      showalert(\" Dark mode enable\", \"success\");\n      document.title= 'TextUtiles-Dark mode';\n      setmystyle({color:\"white\",backgroundColor:\"#212529\",});  \n    }\n    \n    else{\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      // setchtext('Enable Dark Mode')\n      showalert(\" light mode enable\", \"success\");\n      document.title= 'TextUtiles';\n      setmystyle({color:\"black\",backgroundColor:\"white\"});\n    }\n\n\n\n  }\n  return (\n  <>\n <Router>\n    <Navbar sitname=\"Text-Editor\" about=\"about\" mode={mode} toggle={toggle} pallet={pallet}/>\n    <Alert alert={alert}/>\n      <Switch>\n          <Route path=\"/about\">\n          <div className=\"container\">\n            <About mystyle={mystyle}/>\n          </div>\n          </Route>\n         \n          <Route path=\"/\">\n          <TextFrom heading=\"Enter The Text To Analyze\" showalert={showalert} mode={mode}/>\n          </Route>\n      </Switch>\n </Router>\n    \n    \n</>\n  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let initialState = 10;\r\nconst changeNum = (state = initialState, action)=>{\r\n    switch (action.type){\r\n        case 'increament' : return state + 1\r\n        case 'decrement' : return state - 1\r\n        default : return state;\r\n    }\r\n\r\n\r\n}\r\nexport default changeNum;","import changeNum from './updown'\r\n\r\nimport { combineReducers } from 'redux'\r\n\r\nconst rootReducer = combineReducers({\r\n    changeNum\r\n})\r\nexport default rootReducer;","import { createStore } from 'redux'\r\n\r\nimport rootReducer from './reducers/index'\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store'\nimport {Provider} from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}